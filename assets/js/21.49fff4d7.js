(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{247:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"红宝书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#红宝书","aria-hidden":"true"}},[t._v("#")]),t._v(" 红宝书")]),t._v(" "),s("h3",{attrs:{id:"第二章-在html中使用javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二章-在html中使用javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" 第二章:  在html中使用javascript")]),t._v(" "),s("h4",{attrs:{id:"_1-script-元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-script-元素","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. "),s("em",[t._v("<script>元素")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("async")]),t._v(": 表示应该立即下载脚本, 但不妨碍页面中的其他操作, 比如下载其他资源或者等待其他脚本执行, 只对外部脚本文件有效.")]),t._v(" "),s("li",[s("code",[t._v("defer")]),t._v(": 表示延迟脚本执行("),s("strong",[t._v("在遇到</html>标签后再执行")]),t._v(")到页面被完全解析和显示之后再执行, 只对外部脚本文件有效.")])]),t._v(" "),s("h4",{attrs:{id:"_2-script标签的位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-script标签的位置","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. script标签的位置")]),t._v(" "),s("p",[s("strong",[t._v("为什么在性能优化的时候有讲到把"),s("code",[t._v("script")]),t._v("脚本放在下面?")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("放在head里")]),t._v(": "),s("code",[t._v("defer")]),t._v(": 表示延迟脚本执行("),s("strong",[t._v("在遇到</html>标签后再执行")]),t._v(")到页面被完全解析和显示之后再执行, 只对外部脚本文件有效.\n样做的目的就是把所有的外部文件(包括css和js文件)的引用都放在同一个地方, 这也意味着要等到全部JavaScript代码都被下载丶解析丶执行完成以后, 才能开始呈现页面的内容("),s("em",[t._v("浏览器在遇到<body>标签时才开始呈现内容")]),t._v("). 对于那些需要很多JavaScript代码的页面来说, 无疑会导致浏览器在呈现页面时出现明显的延迟.(出现空白现象)")])]),t._v(" "),s("h3",{attrs:{id:"第三章-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三章-数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 第三章: 数据类型")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("undefined")]),t._v(": "),s("code",[t._v("undefined")]),t._v(" 类型只有一个值, 即特殊的undefined. 在使用var声明变量但未对其加以初始化时, 这个变量的值就是undefined.")]),t._v(" "),s("li",[s("strong",[t._v("null")]),t._v(": "),s("code",[t._v("null")]),t._v("是第二个只有一个值的数据类型, 即特殊的"),s("code",[t._v("null")]),t._v(", 从逻辑角度来看, "),s("code",[t._v("null")]),t._v(" 值表示一个空对象指针, 所以使用"),s("code",[t._v("typeof")]),t._v(" 操作符检测"),s("code",[t._v("null")]),t._v("值的时候回返回"),s("code",[t._v("object")])]),t._v(" "),s("li",[s("strong",[t._v("boolean对应的转换规则")]),t._v(":")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("数据类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("转换为true的值")]),t._v(" "),s("th",{staticStyle:{"text-align":"right"}},[t._v("转换为false的值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Boolean")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("false")])]),t._v(" "),s("tr",[s("td",[t._v("String")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("任何非空字符串")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("''(空字符串)")])]),t._v(" "),s("tr",[s("td",[t._v("Number")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("任何非零数值")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0和NaN")])]),t._v(" "),s("tr",[s("td",[t._v("Object")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("任何对象")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("null")])]),t._v(" "),s("tr",[s("td",[t._v("Undefined")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("n/a")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("undefined")])])])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("strong",[t._v("number")]),t._v(":\n浮点数值的最高精度是17位小数, 但在进行算术计算时精度远远不如整数. 例如, 0.1加0.2结果不是0.3 而是0.30000000000000004, 这种计算会产生舍入误差的问题, 有一点需要明确, 这是使用基于"),s("code",[t._v("IEEE745")]),t._v("数值的浮点计算的通病.")])]),t._v(" "),s("h4",{attrs:{id:"数值转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 数值转换")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("Number()")])])]),t._v(" "),s("ul",[s("li",[t._v("如果Boolean值, true和false将分别被转换为1和0")]),t._v(" "),s("li",[t._v("如果是数字值, 只是简单的传入和返回")]),t._v(" "),s("li",[t._v("如果是null返回0, undefined 返回NaN")]),t._v(" "),s("li",[t._v("如果是字符串, 十六进制会转成十进制, 空字符串会转成0")]),t._v(" "),s("li",[t._v("如果是对象, 会调用valueOf()方法, 如果转换的结果为NaN, 则会调用对象的toString方法()")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("parseInt")]),t._v(": 如果第一个数字字符, parseInt就会继续解析第二个字符, 直到遇到非数字字符.接受第二个参数,(可以输出相应的进制)")]),t._v(" "),s("li",[s("strong",[t._v("parseFloat")]),t._v(": 和parseInt区别的是")])]),t._v(" "),s("h4",{attrs:{id:"语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语句","aria-hidden":"true"}},[t._v("#")]),t._v(" 语句")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("switch语句")]),t._v(": 给switch语句传递表达式true, 然后每个case都可以返回一个布尔值.在比较值的时候采用的是全等操作符.")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lessthan "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'between 0 and 10'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'more than 20'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("break和continue语句")]),t._v(" "),s("code",[t._v("break")]),t._v("语句会立即退出循环,强制继续执行循环后面的语句. 儿continue语句虽然也是立即退出循环, 但退出循环后会从循环的顶部继续执行.")])]),t._v(" "),s("h4",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("参数")]),t._v(": 在函数调用的时候ES并不关心传递了几个参数, 原因是ES中的参数在内部都是用一个数组来表示的.函数接受到的始终都是这个数组,")])]),t._v(" "),s("h3",{attrs:{id:"第四章-变量丶作用域和内存问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四章-变量丶作用域和内存问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 第四章: 变量丶作用域和内存问题")]),t._v(" "),s("h4",{attrs:{id:"基本类型和引用类型的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本类型和引用类型的值","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本类型和引用类型的值")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("undefined")]),t._v("丶"),s("code",[t._v("Null")]),t._v("丶"),s("code",[t._v("Boolean")]),t._v("丶"),s("code",[t._v("Number")]),t._v("丶"),s("code",[t._v("String")]),t._v("这5种基本数据类型都是按值访问的.因为可以操作保存在变量中的实际的值.")]),t._v(" "),s("li",[t._v("引用类型的值是保存在内存中的对象.与其他语言不同,JS不允许直接访问内存中的位置,\n也就是不能直接操作对象的内存空间.所以在操作对象的时候, 实际上是在操作对象的引用, 而不是实际的对象.为此, 引用类型的值是按"),s("code",[t._v("引用")]),t._v("访问的.")])]),t._v(" "),s("h4",{attrs:{id:"复制变量值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复制变量值","aria-hidden":"true"}},[t._v("#")]),t._v(" 复制变量值")]),t._v(" "),s("ol",[s("li",[t._v("一个变量在复制基本类型和引用类型的值的时候.不同的是: "),s("code",[t._v("简单类型")]),t._v("的副本和之前的是相互独立的, 而"),s("code",[t._v("引用类型")]),t._v("的副本实际上是一个指针. 而这个指针指向存储在堆中的一个对象.")])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("传递参数")]),t._v(" "),s("p",[t._v("ES中所有函数的参数都是按值传递的")])]),t._v(" "),s("h4",{attrs:{id:"检测类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检测类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 检测类型")]),t._v(" "),s("p",[t._v("基本类型: typeof\n引用类型: 所有引用类型的值都是Object的实例. 因此, 在检测一个引用类型值和Object构造函数时, instanceof操作符始终会返回true.")]),t._v(" "),s("h4",{attrs:{id:"执行环境和作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行环境和作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 执行环境和作用域")]),t._v(" "),s("p",[t._v("执行环境定义了变量或函数有权访问的其他数据. 每个执行环境都有一个与之关联的"),s("code",[t._v("变量对象")]),t._v(".环境中定义的所有变量和函数都保存在这个对象中.")]),t._v(" "),s("h4",{attrs:{id:"没有块级作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#没有块级作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 没有块级作用域")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n")])])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("对于有块级作用域的语言来说, for语句初始化变量的表达式所定义的变量只会存在于循环的环境, 而对于JS来说,\n即使在for循环执行结束之后, 也依旧会存在于循环外部的执行环境中.")])]),t._v(" "),s("h4",{attrs:{id:"垃圾收集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集","aria-hidden":"true"}},[t._v("#")]),t._v(" 垃圾收集")]),t._v(" "),s("blockquote",[s("p",[t._v("JS具有自动垃圾回收机制, 执行环境会负责管理代码执行过程中使用的内存.")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("垃圾收集机制原理")]),t._v(": 找出那些不再使用的变量, 然后释放其占用的内存. 为此垃圾回收器会按照固定的时间间隔, 周期性的执行这一操作.")]),t._v(" "),s("li",[s("strong",[t._v("回收策略")]),t._v(":")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("标记清除")]),t._v(":")])]),t._v(" "),s("ol",[s("li",[t._v("变量进入环境,  ==> 标记为"),s("code",[t._v("进入环境")]),t._v(",  离开环境时,  ==> 标记为"),s("code",[t._v("离开环境")]),t._v(".")]),t._v(" "),s("li",[t._v("垃圾收集器给储存在内存中的所有变量都打上标记, 然后去掉环境中的变量以及被环境中的变量所引用的变量的标记.")]),t._v(" "),s("li",[t._v("而在此之后再被加上标记的变量将被视为准备删除的变量. 原因是环境中的变量已经无法访问到这些变量了. 最后, 垃圾收集器完成内存清除工作.\n销毁带有标记的值, 以及它们所占用的内存空间.")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("引用计数")]),t._v(":")])]),t._v(" "),s("ol",[s("li",[t._v("跟踪记录每个值被引用的次数,")]),t._v(" "),s("li",[s("code",[t._v("弊端")]),t._v(": 循环引用导致内存泄漏")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some_element'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nmyObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myObject\nelement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myObject\n")])])]),s("h3",{attrs:{id:"第五章-引用类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第五章-引用类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 第五章: 引用类型")]),t._v(" "),s("h4",{attrs:{id:"array类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array类型","aria-hidden":"true"}},[t._v("#")]),t._v(" Array类型")]),t._v(" "),s("p",[s("strong",[t._v("1. splice")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("删除")]),t._v(": 需指定两个参数: 1. 要删除第一项的位置, 2. 要删除的项数. 例如: "),s("code",[t._v("splice(0, 2)")]),t._v("会删除数组中的前两项")]),t._v(" "),s("li",[s("code",[t._v("插入/替换")]),t._v(": 需指定三个参数: 1. 起始位置, 2. 0(要删除的项数), 3. 要插入的项. 例如: "),s("code",[t._v("splice(2, 0, 'red', 'green')")]),t._v("会删除当前位置2的项, 然后再从位置2开始插入字符串.")])]),t._v(" "),s("p",[s("strong",[t._v("2. 缩小方法")])]),t._v(" "),s("p",[t._v("ES5新增了两个缩小数组的方法: "),s("code",[t._v("reduce")]),t._v("和"),s("code",[t._v("reduceRight")]),t._v(". 两个方法都会迭代数组的所有项, 然后构建一个最终返回的值\n"),s("code",[t._v("reduce")]),t._v("和"),s("code",[t._v("reduceRight")]),t._v("接受四个参数, "),s("code",[t._v("前一个值")]),t._v(", "),s("code",[t._v("当前值")]),t._v(", "),s("code",[t._v("项的索引")]),t._v(", "),s("code",[t._v("数组对象")]),t._v(".这个函数返回的任何值都会作为第一个参数自动传给下一项.")]),t._v(" "),s("h4",{attrs:{id:"date类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#date类型","aria-hidden":"true"}},[t._v("#")]),t._v(" Date类型")]),t._v(" "),s("p",[s("strong",[t._v("日期格式化方法")]),t._v(":")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("toDateString()")]),t._v("   -----   显示星期几丶月丶日和年")]),t._v(" "),s("li",[s("code",[t._v("toTimeString()")]),t._v("   -----   显示时丶分丶秒和时区")]),t._v(" "),s("li",[s("code",[t._v("toLocalDateString()")]),t._v("   -----   显示特定时区的星期几丶月丶日和年")]),t._v(" "),s("li",[s("code",[t._v("toLocalTimeString()")]),t._v("   -----   显示特定时区的时丶分丶秒和时区")])]),t._v(" "),s("h4",{attrs:{id:"function类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function类型","aria-hidden":"true"}},[t._v("#")]),t._v(" Function类型")]),t._v(" "),s("h5",{attrs:{id:"函数内部属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数内部属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数内部属性")]),t._v(" "),s("ol",[s("li",[t._v("在函数内部, 有两个特殊的对象: "),s("code",[t._v("argument")]),t._v("和"),s("code",[t._v("this")]),t._v(". 其中"),s("code",[t._v("argument")]),t._v("是一个类数组对象, 包含传入函数的所有参数.\n"),s("code",[t._v("argument")]),t._v("对象还有一个名叫callee的属性, 该属性是一个指针, 指向拥有这个argument对象的函数.")]),t._v(" "),s("li",[t._v("每个函数都包含两个非继承而来的方法: apply()和call(). 这两个方法的用途都是在特定的作用域中调用函数, 实际上等于设置函数体内this对象的值.\napply方法接受两个参数: 一个是在其运行函数的作用域, 另一个是参数数组")])]),t._v(" "),s("h3",{attrs:{id:"第六章-面向对象的编程设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第六章-面向对象的编程设计","aria-hidden":"true"}},[t._v("#")]),t._v(" 第六章: 面向对象的编程设计")]),t._v(" "),s("h4",{attrs:{id:"创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建对象")]),t._v(" "),s("h5",{attrs:{id:"_1-创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 创建对象")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("工厂模式")]),t._v(": 没有解决对象识别的问题(即怎样知道一个对象的类型)")]),t._v(" "),s("li",[s("code",[t._v("构造函数")]),t._v(": 每个方法都要在每个实例上重新创建一遍.")]),t._v(" "),s("li",[s("code",[t._v("理解原型对象")]),t._v(": 无论什么时候, 只要创建了一个新函数, 就会为该函数创建一个"),s("code",[t._v("prototype")]),t._v("属性, 这个属性指向函数的原型对象.\n在默认情况下, 所有原型对象都会自动获得一个"),s("code",[t._v("constructor")]),t._v("(构造函数)属性, 这个属性包含一个指向"),s("code",[t._v("prototype")]),t._v("属性所在函数的指针.")])]),t._v(" "),s("h3",{attrs:{id:"第二十二章-高级技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二十二章-高级技巧","aria-hidden":"true"}},[t._v("#")]),t._v(" 第二十二章 高级技巧")]),t._v(" "),s("h4",{attrs:{id:"_1-函数柯里化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-函数柯里化","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 函数柯里化")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" innerArgs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" finalArgs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("innerArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" finalArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_2-函数节流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-函数节流","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 函数节流")]),t._v(" "),s("p",[t._v("函数节流基本思想: 某些代码不可以在没有间断的情况连续重复执行. 第一次调用函数, 创建一个定时器,\n在指定的时间间隔之后运行代码. 当第二次调用该函数时, 它会清除前一次的定时器并设置另一个. 如果前一个\n定时器已经执行过了, 这个操作就没有任何意义.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("throttle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("只要代码是周期性执行的, 都应该使用节流.")])]),t._v(" "),s("h2",{attrs:{id:"js数据结构与算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js数据结构与算法","aria-hidden":"true"}},[t._v("#")]),t._v(" JS数据结构与算法")]),t._v(" "),s("h3",{attrs:{id:"第3章-栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第3章-栈","aria-hidden":"true"}},[t._v("#")]),t._v(" 第3章 栈")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("栈")]),t._v(" "),s("p",[t._v("栈是一种遵从后进先出(LIFO)原则的有序集合. 新添加的或者带待删除的元素都保存在栈的末尾, 称为栈顶, 另一端就叫栈底.\n就像生活中的羽毛球筒.")])]),t._v(" "),s("h4",{attrs:{id:"栈的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈的实现","aria-hidden":"true"}},[t._v("#")]),t._v(" 栈的实现")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Stack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("push")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("element")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("pop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("peek")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("isEmpty")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("clear")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            items "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"利用栈进行进制转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#利用栈进行进制转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 利用栈进行进制转换")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("divideBy2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("deNum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" base")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" remStack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      rem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      binaryString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n      digits "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0123456789ABCDEF'")]),t._v("\n      \n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rem "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" base"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    remStack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    deNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" base"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   \n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("remStack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    binaryString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" digits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remStack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   \n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" binaryString\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"第4章-队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第4章-队列","aria-hidden":"true"}},[t._v("#")]),t._v(" 第4章 队列")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("队列")]),t._v(" "),s("p",[t._v("队列遵从FIFO原则的一组有序的项.队列在尾部添加新元素, 并从顶部移除元素. 最新添加的元素必须排在队列的末尾.")])]),t._v(" "),s("h2",{attrs:{id:"es6函数式编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6函数式编程","aria-hidden":"true"}},[t._v("#")]),t._v(" ES6函数式编程")]),t._v(" "),s("h3",{attrs:{id:"柯里化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#柯里化","aria-hidden":"true"}},[t._v("#")]),t._v(" 柯里化")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("概念")]),t._v(" "),s("p",[t._v("柯里化是把一个多参数函数转换为一个嵌套的一元函数的过程")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("curry")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("binaryFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("firstArg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("secondArg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("binaryFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" secondArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("curry")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'No function provided'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curriedFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curriedFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"柯里化实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#柯里化实战","aria-hidden":"true"}},[t._v("#")]),t._v(" 柯里化实战")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" squareAll "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("squareAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("div",{staticClass:"tip custom-block"},[s("p",[t._v("先柯里化出来一个抽象函数, 然后再具化一个内部的函数, 然后最后传入参数")])]),t._v(" "),s("h2",{attrs:{id:"vue实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue实战","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue实战")]),t._v(" "),s("h3",{attrs:{id:"第三章-计算属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三章-计算属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 第三章 计算属性")]),t._v(" "),s("p",[s("strong",[t._v("原因:")]),t._v(" 表达式过长, 逻辑更为复杂时, 就会变得臃肿甚至难以阅读和维护.")]),t._v(" "),s("p",[s("strong",[t._v("用法")]),t._v(": 计算属性可以依赖多个Vue实例的数据, 只要有一个发生变化, 计算属性就会重新执行, 视图也会更新.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("为什么用methods能得到同样结果还要用它?")]),t._v(" "),s("p",[t._v("计算属性是基于他的依赖缓存的. 一个计算属性所依赖的数据发生变化时, 他才可以重新取值,而methods则是每次渲染都会执行")])]),t._v(" "),s("h3",{attrs:{id:"第七章-组件详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第七章-组件详解","aria-hidden":"true"}},[t._v("#")]),t._v(" 第七章 组件详解")]),t._v(" "),s("h4",{attrs:{id:"通信方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通信方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 通信方式")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("父子")]),t._v(": "),s("code",[t._v("props")]),t._v(" 丶 "),s("code",[t._v("$emit()")])]),t._v(" "),s("li",[s("strong",[t._v("跨级组件")]),t._v(": "),s("code",[t._v("$bus.$emit()")]),t._v(" 丶 "),s("code",[t._v("$bus.$on")])])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("$refs")]),t._v(" "),s("p",[t._v("$refs只在组件渲染完成之后才填充, 并且它是非响应式的. 所以应该避免在模板和计算属性中用到他.")])]),t._v(" "),s("h4",{attrs:{id:"动态组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态组件")]),t._v(" "),s("p",[s("strong",[t._v("用法")]),t._v(": 使用一个特殊的"),s("code",[t._v("component")]),t._v("用来动态的挂载不同的组件 , 使用"),s("code",[t._v("is")]),t._v("特性来选择要挂载的组件.")]),t._v(" "),s("h4",{attrs:{id:"nexttick"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nexttick","aria-hidden":"true"}},[t._v("#")]),t._v(" $nextTick")]),t._v(" "),s("p",[s("strong",[t._v("异步更新队列")]),t._v(": Vue在观察数据变化的时候不是直接更新DOM, 而是开启一个队列, 并缓冲在同一事件循环中发生的所有数据改变,\n在缓冲时会去除重复数据, 从而避免不必要的计算和DOM操作.然后在下一个事件循环tick中, Vue刷新队列并执行工作.")]),t._v(" "),s("h2",{attrs:{id:"面向对象编程指南"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象编程指南","aria-hidden":"true"}},[t._v("#")]),t._v(" 面向对象编程指南")]),t._v(" "),s("h3",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),s("ul",[s("li",[t._v("对象丶方法丶属性")]),t._v(" "),s("li",[t._v("类")]),t._v(" "),s("li",[t._v("封装")]),t._v(" "),s("li",[t._v("聚合")]),t._v(" "),s("li",[t._v("重用与继承")]),t._v(" "),s("li",[t._v("多态")])]),t._v(" "),s("p",[s("strong",[t._v("1. 对象:")]),t._v("\n面向对象, 实质上是指'事物(包括人和物)'在程序设计语言中的表现形式.比如person(对象), eat丶sleep(方法), age(属性)")]),t._v(" "),s("p",[s("strong",[t._v("2. 类:")]),t._v("\n类更多的像是一个模板, 而js里面压根就没有类, 一切都是基于对象的, 所依靠的是一套原型系统(prototype)实际上也是一种对象,")]),t._v(" "),s("p",[s("strong",[t._v("3. 封装:")]),t._v("\n主要用于阐述对象中所包含的内容, 通常有两部分组成:\n* 相关的数据\n* 基于这些数据所能做的事(所能调用的方法)")]),t._v(" "),s("p",[s("strong",[t._v("4. 聚合:")]),t._v("\n将几个现有对象合并成一个新对象的过程.")]),t._v(" "),s("p",[s("strong",[t._v("5. 继承:")]),t._v("\n通过这种继承方式, 我们可以非常优雅的实现对现有代码的重用.")]),t._v(" "),s("p",[s("strong",[t._v("6. 多态:")]),t._v("\n不同对象通过相同的方法调用来实现各自行为的能力.")]),t._v(" "),s("h2",{attrs:{id:"精通正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#精通正则表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 精通正则表达式")]),t._v(" "),s("p",[s("strong",[t._v("字符组")]),t._v(": gr[ea]y:  也可以写成/grey|gray/  也可以写成/gr(a|e)y/")]),t._v(" "),s("p",[s("strong",[t._v("排除型字符组")]),t._v(": [^1-6]匹配除了1到6以外的任何字符.")]),t._v(" "),s("h3",{attrs:{id:"可选项元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可选项元素","aria-hidden":"true"}},[t._v("#")]),t._v(" 可选项元素")]),t._v(" "),s("p",[t._v("/4th|4/ 等价于 /4(th)?/ 括号里面的可以是个整体")]),t._v(" "),s("h3",{attrs:{id:"量词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#量词","aria-hidden":"true"}},[t._v("#")]),t._v(" 量词")]),t._v(" "),s("p",[s("code",[t._v("+")]),t._v(" 一个或多个, 但是连一次都匹配不到就报告失败. "),s("code",[t._v("*")]),t._v(" 也是尽可能匹配多个但是没匹配到也没关系")]),t._v(" "),s("h3",{attrs:{id:"引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用","aria-hidden":"true"}},[t._v("#")]),t._v(" 引用:")]),t._v(" "),s("p",[t._v("/([A-Za-z]+).+\\1/  "),s("code",[t._v("\\1")]),t._v(", "),s("code",[t._v("\\2")]),t._v(" 反向引用, 表示第一次,或者是第二次从括号里面匹配到的文本.")])])},[],!1,null,null,null);a.default=r.exports}}]);